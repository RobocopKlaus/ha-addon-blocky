#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Add-on: Blocky
# Take down the S6 supervision tree when Blocky fails
# ==============================================================================

# Define variables
declare exit_code
readonly exit_code_container=$(</run/s6-linux-init-container-results/exitcode)
readonly exit_code_service="${1}"
readonly exit_code_signal="${2}"
readonly service="blocky"

# Log the service exit information
bashio::log.info "Service ${service} exited with code ${exit_code_service} (by signal ${exit_code_signal})"

# Check if the service exited with a specific code indicating a restart
if [[ "${exit_code_service}" -eq 256 ]]; then
  if [[ "${exit_code_container}" -eq 0 ]]; then
    # Update the container exit code based on the signal
    echo $((128 + exit_code_signal)) > /run/s6-linux-init-container-results/exitcode
  fi
  # If the service was terminated by SIGTERM (signal 15), halt the system
  [[ "${exit_code_signal}" -eq 15 ]] && exec /run/s6/basedir/bin/halt
elif [[ "${exit_code_service}" -ne 0 ]]; then
  if [[ "${exit_code_container}" -eq 0 ]]; then
    # Update the container exit code with the service exit code
    echo "${exit_code_service}" > /run/s6-linux-init-container-results/exitcode
  fi
  # Halt the system if the service exited with a non-zero code
  exec /run/s6/basedir/bin/halt
fi
